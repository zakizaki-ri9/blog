name: PR Comment for PR-Agent

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  pr_comment_for_pr_agent:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install dependencies
        run: sudo apt-get install -y jq

      - name: Generate Installation Token
        id: generate_token
        run: |
          chmod +x .github/generate-jwt.sh
          token=$(APP_ID=${{ secrets.PR_COMMENT_FOR_PR_AGENT_APP_ID }} \
                 APP_PRIVATE_KEY=${{ secrets.PR_COMMENT_FOR_PR_AGENT_APP_PRIVATE_KEY }} \
                 INSTALLATION_ID=${{ secrets.PR_COMMENT_FOR_PR_AGENT_INSTALLATION_ID }} \
                 .github/generate-jwt.sh)
          echo "token=$token" >> $GITHUB_OUTPUT

      - name: Find and Delete Comments
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.generate_token.outputs.token }}
          script: |
            const issue_number = context.issue.number;
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
            });

            const commentsToDelete = comments.data.filter(comment =>
              ['/review', '/describe', '/improve'].includes(comment.body)
            );

            for (const comment of commentsToDelete) {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: comment.id,
              });
            }

      - name: Post Comments
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.generate_token.outputs.token }}
          script: |
            const issue_number = context.issue.number;
            const commentsToPost = ['/review', '/describe', '/improve'];

            for (const comment of commentsToPost) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                body: comment,
              });
            }
