---
import BaseHead from '@/components/BaseHead.astro';
import Header from '@/components/Header.astro';
import { SITE_TITLE } from '@/consts';
import { getCollection } from 'astro:content';
import FormattedDate from '@/components/FormattedDate.astro';

export async function getStaticPaths() {
    const posts = await getCollection('blog');
    
    // タグの一覧を取得
    const tags = [...new Set(posts.flatMap((post) => post.data.tags || []))];
    
    return tags.map((tag) => ({
        params: { tag },
        props: {
            posts: posts
                .filter((post) => post.data.tags?.includes(tag))
                .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()),
            tag
        },
    }));
}

const { tag } = Astro.params;
const { posts } = Astro.props;
const pageTitle = `タグ: ${tag}`;
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={`${pageTitle} | ${SITE_TITLE}`} description={`${tag}に関連する記事一覧`} />
		<style>
			main {
				width: 960px;
			}
			.tag-header {
				margin-bottom: 2rem;
			}
			.tag-header h1 {
				font-size: 2rem;
				margin: 0;
			}
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: calc(50% - 1rem);
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			ul li img {
				margin-bottom: 0.5rem;
				border-radius: 12px;
				width: 100%;
				height: auto;
				aspect-ratio: 1200 / 630;
				object-fit: cover;
			}
			ul li a {
				display: block;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}
			ul li a:hover h4,
			ul li a:hover .date {
				color: rgb(var(--accent));
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
			}
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<section>
				<div class="tag-header">
					<h1>{pageTitle}</h1>
				</div>
				<ul>
					{
						posts.map((post) => {
							const imageUrl = post.data.heroImage;
							return (
								<li>
									<a href={`/blog/${post.id.replace(/\.mdx?$/, '')}/`}>
										{imageUrl && (
											<img
												width={1200}
												height={630}
												src={imageUrl}
												alt={post.data.title}
											/>
										)}
										<h4 class="title">{post.data.title}</h4>
										<p class="date">
											<FormattedDate date={post.data.pubDate} />
										</p>
									</a>
								</li>
							);
						})
					}
				</ul>
			</section>
		</main>
	</body>
</html> 
