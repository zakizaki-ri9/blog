---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '@/components/BaseHead.astro';
import Header from '@/components/Header.astro';
import FormattedDate from '@/components/FormattedDate.astro';

interface Props {
	data: CollectionEntry<'blog'>['data'];
	slug: string;
}

const { data, slug } = Astro.props;
const { title, description, pubDate, updatedDate, heroImage, tags } = data;
---

<html lang="ja">
	<head>
		<BaseHead title={title} description={description} slug={slug} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
			.tags {
				display: flex;
				flex-wrap: wrap;
				gap: 0.5em;
				justify-content: center;
				margin: 1em 0;
			}
			.tag {
				display: inline-block;
				padding: 0.2em 0.8em;
				color: rgb(var(--accent));
				border-radius: 0.3em;
				font-size: 0.9em;
				text-decoration: none;
				border: 1px solid rgb(var(--accent));
				transition: all 0.2s ease;
			}
			.tag:hover {
				background-color: rgb(var(--accent));
				color: white;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				{heroImage && (
					<div class="hero-image">
						<img width={1020} height={510} src={heroImage} alt="" />
					</div>
				)}
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<div class="tags">
							{tags && tags.map((tag) => (
								<a href={`/tags/${tag}`} class="tag">#{tag}</a>
							))}
						</div>
					</div>
					<slot />
				</div>
			</article>
		</main>
	</body>
</html>
